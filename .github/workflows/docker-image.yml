name: Docker Image CI

on:
  push:
    paths-ignore:
      - 'devices/device/**'
      - 'sensors/sensor/**'
      - 'helm/**'
      - 'docs/**'
      - '**.md'
      - '**.MD'
    branches:
      - '**' # every branch
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build and publish
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: api-server - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./devices/api-server
          file: ./devices/api-server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-api-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: api-devices - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./devices/api-devices
          file: ./devices/api-devices/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-api-devices:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: mosquitto - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./mosquitto
          file: ./mosquitto/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mosquitto:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: gui - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./gui
          file: ./gui/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-gui:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: register - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./sensors/register
          file: ./sensors/register/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-register:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: consumer - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./sensors/consumer
          file: ./sensors/consumer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-consumer:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: producer - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./sensors/producer
          file: ./sensors/producer/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-producer:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: esp32-configurator - build and push
        uses: docker/build-push-action@v3
        with:
          context: ./esp32-configurator
          file: ./esp32-configurator/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ac-esp32-configurator:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max